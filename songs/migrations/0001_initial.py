# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-12-30 05:08
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('media_url', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('published', models.BooleanField(default=False)),
                ('license', models.CharField(choices=[('cc-by-4.0', 'Creative Commons Attribution 4.0')], default='cc-by-4.0', max_length=100)),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SongStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('likes', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('song', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='songs.Song')),
            ],
            options={
                'db_table': 'songs_song_stats',
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.CharField(choices=[('Bass', (('guitar_acoustic_bass', 'Acoustic Bass Guitar'), ('guitar_double_bass', 'Double Bass'), ('guitar_bass', 'Bass Guitar'))), ('Guitar', (('guitar_acoustic', 'Acoustic Guitar'), ('guitar_classical', 'Classical Guitar'), ('guitar_electric', 'Electric Guitar'), ('guitar_steel', 'Steel Guitar'))), ('Keyboards', (('keyboard_accordion', 'Accordion'), ('keyboard_piano', 'Piano'), ('keyboard_pipe_organ', 'Pipe Organ'), ('keyboard_synthesizer', 'Synthesizer'))), ('Percussion', (('percussion_bass', 'Bass Drum'), ('percussion_bongos', 'Bongos'), ('percussion_cymbals', 'Cymbals'), ('percussion_snare', 'Snare Drum'), ('percussion_drum_set', 'Drum Set'))), ('Strings', (('string_banjo', 'Banjo'), ('string_cello', 'Cello'), ('string_harp', 'Harp'), ('string_mandolin', 'Mandolin'), ('string_ukulele', 'Ukulele'), ('string_viola', 'Viola'), ('string_violin', 'Violin'))), ('Winds', (('wind_clarinet', 'Clarinet'), ('wind_flute', 'Flute'), ('wind_french_horn', 'French Horn'), ('wind_saxophone', 'Saxophone'), ('wind_trombone', 'Trombone'), ('wind_trumpet', 'Trumpet'), ('wind_tuba', 'Tuba'))), ('Vocals', (('vocal_baritone', 'Baritone Vocals'), ('vocal_bass', 'Bass Vocals'), ('vocal_general', 'General Vocals'), ('vocal_soprano', 'Soprano Vocals'), ('vocal_tenor', 'Tenor Vocals'), ('vocal_alto', 'Alto Vocals')))], max_length=100)),
                ('audio_url', models.CharField(blank=True, max_length=500, null=True)),
                ('audio_name', models.CharField(blank=True, max_length=500, null=True)),
                ('audio_size', models.IntegerField(blank=True, null=True)),
                ('audio_content_type', models.CharField(blank=True, max_length=100, null=True)),
                ('public', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('license', models.CharField(choices=[('cc-by-4.0', 'Creative Commons Attribution 4.0')], default='cc-by-4.0', max_length=100)),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('contributed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contributed_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='songs.Song')),
            ],
        ),
        migrations.CreateModel(
            name='TrackRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio_url', models.CharField(max_length=500)),
                ('audio_name', models.CharField(blank=True, max_length=500, null=True)),
                ('audio_size', models.IntegerField(blank=True, null=True)),
                ('audio_content_type', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('declined', 'Declined')], default='pending', max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('license', models.CharField(choices=[('cc-by-4.0', 'Creative Commons Attribution 4.0')], default='cc-by-4.0', max_length=100)),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='songs.Track')),
            ],
            options={
                'db_table': 'songs_track_requests',
            },
        ),
    ]
